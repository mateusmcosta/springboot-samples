
spring:
    application.name: circuit-breaker
    jackson.serialization.indent_output: true

server:
    port: 8180

management.endpoints.web.exposure.include: '*'
management.endpoint.health.show-details: always

management.health.diskspace.enabled: false
management.health.circuitbreakers.enabled: true
management.health.ratelimiters.enabled: false

info:
    name: ${spring.application.name}
    description: resilience4j demo
    environment: ${spring.profiles.active}
    version: 0.0.1

resilience4j.circuitbreaker:
    configs:
        default:
            registerHealthIndicator: true
            slidingWindowSize: 6
            minimumNumberOfCalls: 3
            permittedNumberOfCallsInHalfOpenState: 2
            automaticTransitionFromOpenToHalfOpenEnabled: true
            waitDurationInOpenState: 15s
            failureRateThreshold: 50
            eventConsumerBufferSize: 10
            recordExceptions:
                - org.springframework.web.client.HttpServerErrorException
                - java.util.concurrent.TimeoutException
                - java.io.IOException
            ignoreExceptions:
                - com.github.mateusmcosta.circuitbreaker.exception.BusinessException
        # shared:
        #     slidingWindowSize: 100
        #     permittedNumberOfCallsInHalfOpenState: 30
        #     waitDurationInOpenState: 1s
        #     failureRateThreshold: 50
        #     eventConsumerBufferSize: 10
        #     ignoreExceptions:
        #         - com.github.mateusmcosta.circuitbreaker.exception.BusinessException
    instances:
        groupA:
            baseConfig: default
        groupB:
            registerHealthIndicator: true
            slidingWindowSize: 4
            minimumNumberOfCalls: 2
            permittedNumberOfCallsInHalfOpenState: 2
            waitDurationInOpenState: 20s
            failureRateThreshold: 50
            eventConsumerBufferSize: 10
            recordFailurePredicate: com.github.mateusmcosta.circuitbreaker.exception.RecordFailurePredicate
resilience4j.retry:
    configs:
        default:
            maxAttempts: 3
            waitDuration: 100
            retryExceptions:
                - org.springframework.web.client.HttpServerErrorException
                - java.util.concurrent.TimeoutException
                - java.io.IOException
            ignoreExceptions:
                - com.github.mateusmcosta.circuitbreaker.exception.BusinessException
    instances:
        groupA:
            baseConfig: default
        groupB:
            baseConfig: default
resilience4j.bulkhead:
    configs:
        default:
            maxConcurrentCalls: 100
    instances:
        groupA:
            maxConcurrentCalls: 10
        groupB:
            maxWaitDuration: 10ms
            maxConcurrentCalls: 20

resilience4j.thread-pool-bulkhead:
    configs:
        default:
            maxThreadPoolSize: 4
            coreThreadPoolSize: 2
            queueCapacity: 2
    instances:
        groupA:
            baseConfig: default
        groupB:
            maxThreadPoolSize: 1
            coreThreadPoolSize: 1
            queueCapacity: 1

resilience4j.ratelimiter:
    configs:
        default:
            registerHealthIndicator: false
            limitForPeriod: 10
            limitRefreshPeriod: 1s
            timeoutDuration: 0
            eventConsumerBufferSize: 100
    instances:
        groupA:
            baseConfig: default
        groupB:
            limitForPeriod: 6
            limitRefreshPeriod: 500ms
            timeoutDuration: 3s

resilience4j.timelimiter:
    configs:
        default:
            cancelRunningFuture: false
            timeoutDuration: 2s
    instances:
        groupA:
            baseConfig: default
        groupB:
            baseConfig: default